{"$type":"TrFuncPointer","posargcount":0,"allargcount":0,"hasvararg":false,"haskwarg":false,"kwindices":{},"code":{"$type":"Block","hasCont":false,"suite":[{"$type":"Assign","position":1,"hasCont":false,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"x","isInterned":false}},"rhs":{"$type":"Constant","o":{"$type":"TrInt","value":1}}},{"$type":"Assign","position":2,"hasCont":false,"lhs":{"$type":"StoreListEx","position":4,"hasCont":false,"before":[{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"x","isInterned":false}}],"unpack":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"z","isInterned":false}},"after":[{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"y","isInterned":false}}]},"rhs":{"$type":"List","position":3,"hasCont":false,"elements":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":1}}},{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":2}}},{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":3}}}]}},{"$type":"Assign","position":0,"hasCont":false,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"g","isInterned":false}},"rhs":{"$type":"Lambda","hasCont":false,"fptr":{"$type":"TrFuncPointer","posargcount":1,"allargcount":1,"hasvararg":false,"haskwarg":false,"kwindices":{"0":{"$type":"TrStr","value":"u","isInterned":false}},"code":{"$type":"Block","hasCont":false,"suite":[{"$type":"Return","position":1,"hasCont":false,"value":{"$type":"Lambda","hasCont":false,"fptr":{"$type":"TrFuncPointer","posargcount":1,"allargcount":1,"hasvararg":false,"haskwarg":false,"kwindices":{"0":{"$type":"TrStr","value":"x","isInterned":false}},"code":{"$type":"Return","position":3,"hasCont":false,"value":{"$type":"BinOp","position":1,"left":{"$type":"LocalVar","position":2,"slot":0},"right":{"$type":"LocalVar","position":3,"slot":-1},"op":0}},"metadata":{"$type":"Metadata","localnames":["x"],"freenames":["u"],"codename":"<lambda>","filename":"a.py","sourceCode":"x = 1\nx, *z, y = [1, 2, 3]\n\ndef g(u):\n    return lambda x: x + u\n\ndef u(x):\n    i = 0\n    while i < x:\n        i = i + 1\n        yield i\nprint(g(1)(2))\n\ngen = u(5)\nprint(\"starting gen\")\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint.__call__(next(gen))\n\ndef k(*args, x=(1, 2)):\n    print(args)\n    return x\n\nprint(k(1, 2, 3, 5, 6))\n\ndef uq(a, b, *, y = 1):\n    return a + b + y\n\nprint(uq(1, 2))\nprint(uq(1, 2, y=3))\nprint(dict([(1, 2)]))\n\nz = 1\nz += 1\nprint(z)\ndef test1():\n    x = 0\n    while x < 10000000:\n        x += 1\n        yield x\ndef test2():\n    x = 0\n    while x < 10000000:\n        x += 1\n    return x\n# a = time()\n# xs = test2()\n# print(\"value\", xs)\n# print(\"time1\", time() - a)\n\n# a = time()\n# xs = list(test1())\n# print(\"len\", len(xs))\n# print(\"time2\", time() - a)\n# print(1)\ntry:\n    raise Exception(\"test\")\nexcept NativeError as e:\n    print(e.typename == \"DivideByZeroException\")\nprint(1)\nprint(1)\nprint(1)\n\n\ndef f():\n    print(\"s2\", (yield 5))\nprint(9)\nc = f()\n\ndef k():\n    yield from c\n\nx = ref()\nz = c.send(None, x)\nprint(\"z\", z)\nif z:\n    print(\"s1\", x.value)\n\nif k().send(None, x):\n    print(x.value)\n\n\nco = f()\nprint(co.send(None))\nco.send(3)","compressedSpanPointers":[2147581954,2147581954,2147713028,2147598336],"compressedPositions":[92277632,92281472,92280192,92280448,92281280]}},"default_args":[],"freeslots":[0]}}]},"metadata":{"$type":"Metadata","localnames":["u"],"freenames":[],"codename":"g","filename":"a.py","sourceCode":"x = 1\nx, *z, y = [1, 2, 3]\n\ndef g(u):\n    return lambda x: x + u\n\ndef u(x):\n    i = 0\n    while i < x:\n        i = i + 1\n        yield i\nprint(g(1)(2))\n\ngen = u(5)\nprint(\"starting gen\")\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint.__call__(next(gen))\n\ndef k(*args, x=(1, 2)):\n    print(args)\n    return x\n\nprint(k(1, 2, 3, 5, 6))\n\ndef uq(a, b, *, y = 1):\n    return a + b + y\n\nprint(uq(1, 2))\nprint(uq(1, 2, y=3))\nprint(dict([(1, 2)]))\n\nz = 1\nz += 1\nprint(z)\ndef test1():\n    x = 0\n    while x < 10000000:\n        x += 1\n        yield x\ndef test2():\n    x = 0\n    while x < 10000000:\n        x += 1\n    return x\n# a = time()\n# xs = test2()\n# print(\"value\", xs)\n# print(\"time1\", time() - a)\n\n# a = time()\n# xs = list(test1())\n# print(\"len\", len(xs))\n# print(\"time2\", time() - a)\n# print(1)\ntry:\n    raise Exception(\"test\")\nexcept NativeError as e:\n    print(e.typename == \"DivideByZeroException\")\nprint(1)\nprint(1)\nprint(1)\n\n\ndef f():\n    print(\"s2\", (yield 5))\nprint(9)\nc = f()\n\ndef k():\n    yield from c\n\nx = ref()\nz = c.send(None, x)\nprint(\"z\", z)\nif z:\n    print(\"s1\", x.value)\n\nif k().send(None, x):\n    print(x.value)\n\n\nco = f()\nprint(co.send(None))\nco.send(3)","compressedSpanPointers":[2147581954,2147598336],"compressedPositions":[75530245,2149220357,2147794944]}},"default_args":[],"freeslots":[]}},{"$type":"Assign","position":0,"hasCont":false,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"u","isInterned":false}},"rhs":{"$type":"Lambda","hasCont":false,"fptr":{"$type":"TrFuncPointer","posargcount":1,"allargcount":1,"hasvararg":false,"haskwarg":false,"kwindices":{"0":{"$type":"TrStr","value":"x","isInterned":false}},"code":{"$type":"Block","hasCont":true,"suite":[{"$type":"Assign","position":1,"hasCont":false,"lhs":{"$type":"StoreLocal","slot":1},"rhs":{"$type":"Constant","o":{"$type":"TrInt","value":0}}},{"$type":"While","position":2,"hasCont":true,"test":{"$type":"CmpOp","position":3,"op":15,"left":{"$type":"LocalVar","position":4,"slot":1},"comparators":[{"$type":"LocalVar","position":5,"slot":0}]},"body":{"$type":"Block","hasCont":true,"suite":[{"$type":"Assign","position":6,"hasCont":false,"lhs":{"$type":"StoreLocal","slot":1},"rhs":{"$type":"BinOp","position":7,"left":{"$type":"LocalVar","position":8,"slot":1},"right":{"$type":"Constant","o":{"$type":"TrInt","value":1}},"op":0}},{"$type":"Yield","position":9,"value":{"$type":"LocalVar","position":10,"slot":1}}]},"orelse":null}]},"metadata":{"$type":"Metadata","localnames":["x","i"],"freenames":[],"codename":"u","filename":"a.py","sourceCode":"x = 1\nx, *z, y = [1, 2, 3]\n\ndef g(u):\n    return lambda x: x + u\n\ndef u(x):\n    i = 0\n    while i < x:\n        i = i + 1\n        yield i\nprint(g(1)(2))\n\ngen = u(5)\nprint(\"starting gen\")\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint.__call__(next(gen))\n\ndef k(*args, x=(1, 2)):\n    print(args)\n    return x\n\nprint(k(1, 2, 3, 5, 6))\n\ndef uq(a, b, *, y = 1):\n    return a + b + y\n\nprint(uq(1, 2))\nprint(uq(1, 2, y=3))\nprint(dict([(1, 2)]))\n\nz = 1\nz += 1\nprint(z)\ndef test1():\n    x = 0\n    while x < 10000000:\n        x += 1\n        yield x\ndef test2():\n    x = 0\n    while x < 10000000:\n        x += 1\n    return x\n# a = time()\n# xs = test2()\n# print(\"value\", xs)\n# print(\"time1\", time() - a)\n\n# a = time()\n# xs = list(test1())\n# print(\"len\", len(xs))\n# print(\"time2\", time() - a)\n# print(1)\ntry:\n    raise Exception(\"test\")\nexcept NativeError as e:\n    print(e.typename == \"DivideByZeroException\")\nprint(1)\nprint(1)\nprint(1)\n\n\ndef f():\n    print(\"s2\", (yield 5))\nprint(9)\nc = f()\n\ndef k():\n    yield from c\n\nx = ref()\nz = c.send(None, x)\nprint(\"z\", z)\nif z:\n    print(\"s1\", x.value)\n\nif k().send(None, x):\n    print(x.value)\n\n\nco = f()\nprint(co.send(None))\nco.send(3)","compressedSpanPointers":[2147581954,2147713028,2147581957,2147909637,2147975176,2147909641,2148171787,2148171787,2148302861,2147581966,2147598336],"compressedPositions":[125861899,2148499464,2147778568,2148106249,2147778569,2148171785,2148499465,2148237321,2148433930,2148040714,2148630538,2148302858,2148368395,2148040715,2148450304]}},"default_args":[],"freeslots":[]}},{"$type":"CallEx","position":7,"hasCont":false,"func":{"$type":"GlobalVar","position":8,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"CallEx","position":9,"hasCont":false,"func":{"$type":"CallEx","position":10,"hasCont":false,"func":{"$type":"GlobalVar","position":11,"name":{"$type":"TrStr","value":"g","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":1}}}],"kwargs":[]},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":2}}}],"kwargs":[]}}],"kwargs":[]},{"$type":"Assign","position":12,"hasCont":false,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"gen","isInterned":false}},"rhs":{"$type":"CallEx","position":13,"hasCont":false,"func":{"$type":"GlobalVar","position":14,"name":{"$type":"TrStr","value":"u","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":5}}}],"kwargs":[]}},{"$type":"CallEx","position":15,"hasCont":false,"func":{"$type":"GlobalVar","position":16,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrStr","value":"starting gen","isInterned":false}}}],"kwargs":[]},{"$type":"CallEx","position":17,"hasCont":false,"func":{"$type":"GlobalVar","position":18,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"CallEx","position":19,"hasCont":false,"func":{"$type":"GlobalVar","position":20,"name":{"$type":"TrStr","value":"next","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"GlobalVar","position":21,"name":{"$type":"TrStr","value":"gen","isInterned":false}}}],"kwargs":[]}}],"kwargs":[]},{"$type":"CallEx","position":22,"hasCont":false,"func":{"$type":"GlobalVar","position":23,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"CallEx","position":24,"hasCont":false,"func":{"$type":"GlobalVar","position":25,"name":{"$type":"TrStr","value":"next","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"GlobalVar","position":26,"name":{"$type":"TrStr","value":"gen","isInterned":false}}}],"kwargs":[]}}],"kwargs":[]},{"$type":"CallEx","position":27,"hasCont":false,"func":{"$type":"GlobalVar","position":28,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"CallEx","position":29,"hasCont":false,"func":{"$type":"GlobalVar","position":30,"name":{"$type":"TrStr","value":"next","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"GlobalVar","position":31,"name":{"$type":"TrStr","value":"gen","isInterned":false}}}],"kwargs":[]}}],"kwargs":[]},{"$type":"CallEx","position":32,"hasCont":false,"func":{"$type":"GlobalVar","position":33,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"CallEx","position":34,"hasCont":false,"func":{"$type":"GlobalVar","position":35,"name":{"$type":"TrStr","value":"next","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"GlobalVar","position":36,"name":{"$type":"TrStr","value":"gen","isInterned":false}}}],"kwargs":[]}}],"kwargs":[]},{"$type":"CallEx","position":37,"hasCont":false,"func":{"$type":"Attribute","position":38,"hasCont":false,"value":{"$type":"GlobalVar","position":39,"name":{"$type":"TrStr","value":"print","isInterned":false}},"attr":{"$type":"TrStr","value":"__call__","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"CallEx","position":40,"hasCont":false,"func":{"$type":"GlobalVar","position":41,"name":{"$type":"TrStr","value":"next","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"GlobalVar","position":42,"name":{"$type":"TrStr","value":"gen","isInterned":false}}}],"kwargs":[]}}],"kwargs":[]},{"$type":"Assign","position":0,"hasCont":false,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"k","isInterned":false}},"rhs":{"$type":"Lambda","hasCont":false,"fptr":{"$type":"TrFuncPointer","posargcount":0,"allargcount":2,"hasvararg":true,"haskwarg":false,"kwindices":{"0":{"$type":"TrStr","value":"args","isInterned":false},"1":{"$type":"TrStr","value":"x","isInterned":false}},"code":{"$type":"Block","hasCont":false,"suite":[{"$type":"CallEx","position":1,"hasCont":false,"func":{"$type":"GlobalVar","position":2,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"LocalVar","position":3,"slot":0}}],"kwargs":[]},{"$type":"Return","position":4,"hasCont":false,"value":{"$type":"LocalVar","position":5,"slot":1}}]},"metadata":{"$type":"Metadata","localnames":["args","x"],"freenames":[],"codename":"k","filename":"a.py","sourceCode":"x = 1\nx, *z, y = [1, 2, 3]\n\ndef g(u):\n    return lambda x: x + u\n\ndef u(x):\n    i = 0\n    while i < x:\n        i = i + 1\n        yield i\nprint(g(1)(2))\n\ngen = u(5)\nprint(\"starting gen\")\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint.__call__(next(gen))\n\ndef k(*args, x=(1, 2)):\n    print(args)\n    return x\n\nprint(k(1, 2, 3, 5, 6))\n\ndef uq(a, b, *, y = 1):\n    return a + b + y\n\nprint(uq(1, 2))\nprint(uq(1, 2, y=3))\nprint(dict([(1, 2)]))\n\nz = 1\nz += 1\nprint(z)\ndef test1():\n    x = 0\n    while x < 10000000:\n        x += 1\n        yield x\ndef test2():\n    x = 0\n    while x < 10000000:\n        x += 1\n    return x\n# a = time()\n# xs = test2()\n# print(\"value\", xs)\n# print(\"time1\", time() - a)\n\n# a = time()\n# xs = list(test1())\n# print(\"len\", len(xs))\n# print(\"time2\", time() - a)\n# print(1)\ntry:\n    raise Exception(\"test\")\nexcept NativeError as e:\n    print(e.typename == \"DivideByZeroException\")\nprint(1)\nprint(1)\nprint(1)\n\n\ndef f():\n    print(\"s2\", (yield 5))\nprint(9)\nc = f()\n\ndef k():\n    yield from c\n\nx = ref()\nz = c.send(None, x)\nprint(\"z\", z)\nif z:\n    print(\"s1\", x.value)\n\nif k().send(None, x):\n    print(x.value)\n\n\nco = f()\nprint(co.send(None))\nco.send(3)","compressedSpanPointers":[2147581954,2147713026,2147778565,2147909639,2147581960,2147598336],"compressedPositions":[377520152,2148302871,2147778583,2148499479,2148106263,2148171799,2148433944,2147778584,2148253696]}},"default_args":[{"$type":"DefaultArgEntry","slot":1,"value":{"$type":"Tuple","position":44,"hasCont":false,"elements":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":1}}},{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":2}}}]}}],"freeslots":[]}},{"$type":"CallEx","position":45,"hasCont":false,"func":{"$type":"GlobalVar","position":46,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"CallEx","position":47,"hasCont":false,"func":{"$type":"GlobalVar","position":48,"name":{"$type":"TrStr","value":"k","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":1}}},{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":2}}},{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":3}}},{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":5}}},{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":6}}}],"kwargs":[]}}],"kwargs":[]},{"$type":"Assign","position":0,"hasCont":false,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"uq","isInterned":false}},"rhs":{"$type":"Lambda","hasCont":false,"fptr":{"$type":"TrFuncPointer","posargcount":2,"allargcount":3,"hasvararg":false,"haskwarg":false,"kwindices":{"0":{"$type":"TrStr","value":"a","isInterned":false},"1":{"$type":"TrStr","value":"b","isInterned":false},"2":{"$type":"TrStr","value":"y","isInterned":false}},"code":{"$type":"Block","hasCont":false,"suite":[{"$type":"Return","position":1,"hasCont":false,"value":{"$type":"BinOp","position":2,"left":{"$type":"BinOp","position":3,"left":{"$type":"LocalVar","position":4,"slot":0},"right":{"$type":"LocalVar","position":5,"slot":1},"op":0},"right":{"$type":"LocalVar","position":6,"slot":2},"op":0}}]},"metadata":{"$type":"Metadata","localnames":["a","b","y"],"freenames":[],"codename":"uq","filename":"a.py","sourceCode":"x = 1\nx, *z, y = [1, 2, 3]\n\ndef g(u):\n    return lambda x: x + u\n\ndef u(x):\n    i = 0\n    while i < x:\n        i = i + 1\n        yield i\nprint(g(1)(2))\n\ngen = u(5)\nprint(\"starting gen\")\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint.__call__(next(gen))\n\ndef k(*args, x=(1, 2)):\n    print(args)\n    return x\n\nprint(k(1, 2, 3, 5, 6))\n\ndef uq(a, b, *, y = 1):\n    return a + b + y\n\nprint(uq(1, 2))\nprint(uq(1, 2, y=3))\nprint(dict([(1, 2)]))\n\nz = 1\nz += 1\nprint(z)\ndef test1():\n    x = 0\n    while x < 10000000:\n        x += 1\n        yield x\ndef test2():\n    x = 0\n    while x < 10000000:\n        x += 1\n    return x\n# a = time()\n# xs = test2()\n# print(\"value\", xs)\n# print(\"time1\", time() - a)\n\n# a = time()\n# xs = list(test1())\n# print(\"len\", len(xs))\n# print(\"time2\", time() - a)\n# print(1)\ntry:\n    raise Exception(\"test\")\nexcept NativeError as e:\n    print(e.typename == \"DivideByZeroException\")\nprint(1)\nprint(1)\nprint(1)\n\n\ndef f():\n    print(\"s2\", (yield 5))\nprint(9)\nc = f()\n\ndef k():\n    yield from c\n\nx = ref()\nz = c.send(None, x)\nprint(\"z\", z)\nif z:\n    print(\"s1\", x.value)\n\nif k().send(None, x):\n    print(x.value)\n\n\nco = f()\nprint(co.send(None))\nco.send(3)","compressedSpanPointers":[2147581954,2147581955,2147581955,2147778563,2147844102,2147778567,2147598336],"compressedPositions":[478183453,2148827165,2147778589,2148237341,2148565021,2148302877,2148499485,2148777984]}},"default_args":[{"$type":"DefaultArgEntry","slot":2,"value":{"$type":"Constant","o":{"$type":"TrInt","value":1}}}],"freeslots":[]}},{"$type":"CallEx","position":50,"hasCont":false,"func":{"$type":"GlobalVar","position":51,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"CallEx","position":52,"hasCont":false,"func":{"$type":"GlobalVar","position":53,"name":{"$type":"TrStr","value":"uq","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":1}}},{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":2}}}],"kwargs":[]}}],"kwargs":[]},{"$type":"CallEx","position":54,"hasCont":false,"func":{"$type":"GlobalVar","position":55,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"CallEx","position":56,"hasCont":false,"func":{"$type":"GlobalVar","position":57,"name":{"$type":"TrStr","value":"uq","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":1}}},{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":2}}}],"kwargs":[[{"$type":"TrStr","value":"y","isInterned":false},{"$type":"Constant","o":{"$type":"TrInt","value":3}}]]}}],"kwargs":[]},{"$type":"CallEx","position":58,"hasCont":false,"func":{"$type":"GlobalVar","position":59,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"CallEx","position":60,"hasCont":false,"func":{"$type":"GlobalVar","position":61,"name":{"$type":"TrStr","value":"dict","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"List","position":62,"hasCont":false,"elements":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Tuple","position":63,"hasCont":false,"elements":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":1}}},{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":2}}}]}}]}}],"kwargs":[]}}],"kwargs":[]},{"$type":"Assign","position":64,"hasCont":false,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"z","isInterned":false}},"rhs":{"$type":"Constant","o":{"$type":"TrInt","value":1}}},{"$type":"AugAssign","position":65,"op":0,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"z","isInterned":false}},"rhs":{"$type":"Constant","o":{"$type":"TrInt","value":1}}},{"$type":"CallEx","position":66,"hasCont":false,"func":{"$type":"GlobalVar","position":67,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"GlobalVar","position":68,"name":{"$type":"TrStr","value":"z","isInterned":false}}}],"kwargs":[]},{"$type":"Assign","position":0,"hasCont":false,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"test1","isInterned":false}},"rhs":{"$type":"Lambda","hasCont":false,"fptr":{"$type":"TrFuncPointer","posargcount":0,"allargcount":0,"hasvararg":false,"haskwarg":false,"kwindices":{},"code":{"$type":"Block","hasCont":true,"suite":[{"$type":"Assign","position":1,"hasCont":false,"lhs":{"$type":"StoreLocal","slot":0},"rhs":{"$type":"Constant","o":{"$type":"TrInt","value":0}}},{"$type":"While","position":2,"hasCont":true,"test":{"$type":"CmpOp","position":3,"op":15,"left":{"$type":"LocalVar","position":4,"slot":0},"comparators":[{"$type":"Constant","o":{"$type":"TrInt","value":10000000}}]},"body":{"$type":"Block","hasCont":true,"suite":[{"$type":"AugAssign","position":5,"op":0,"lhs":{"$type":"StoreLocal","slot":0},"rhs":{"$type":"Constant","o":{"$type":"TrInt","value":1}}},{"$type":"Yield","position":6,"value":{"$type":"LocalVar","position":7,"slot":0}}]},"orelse":null}]},"metadata":{"$type":"Metadata","localnames":["x"],"freenames":[],"codename":"test1","filename":"a.py","sourceCode":"x = 1\nx, *z, y = [1, 2, 3]\n\ndef g(u):\n    return lambda x: x + u\n\ndef u(x):\n    i = 0\n    while i < x:\n        i = i + 1\n        yield i\nprint(g(1)(2))\n\ngen = u(5)\nprint(\"starting gen\")\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint.__call__(next(gen))\n\ndef k(*args, x=(1, 2)):\n    print(args)\n    return x\n\nprint(k(1, 2, 3, 5, 6))\n\ndef uq(a, b, *, y = 1):\n    return a + b + y\n\nprint(uq(1, 2))\nprint(uq(1, 2, y=3))\nprint(dict([(1, 2)]))\n\nz = 1\nz += 1\nprint(z)\ndef test1():\n    x = 0\n    while x < 10000000:\n        x += 1\n        yield x\ndef test2():\n    x = 0\n    while x < 10000000:\n        x += 1\n    return x\n# a = time()\n# xs = test2()\n# print(\"value\", xs)\n# print(\"time1\", time() - a)\n\n# a = time()\n# xs = list(test1())\n# print(\"len\", len(xs))\n# print(\"time2\", time() - a)\n# print(1)\ntry:\n    raise Exception(\"test\")\nexcept NativeError as e:\n    print(e.typename == \"DivideByZeroException\")\nprint(1)\nprint(1)\nprint(1)\n\n\ndef f():\n    print(\"s2\", (yield 5))\nprint(9)\nc = f()\n\ndef k():\n    yield from c\n\nx = ref()\nz = c.send(None, x)\nprint(\"z\", z)\nif z:\n    print(\"s1\", x.value)\n\nif k().send(None, x):\n    print(x.value)\n\n\nco = f()\nprint(co.send(None))\nco.send(3)","compressedSpanPointers":[2147581954,2147713028,2147581957,2147909637,2147975176,2148106250,2147581963,2147598336],"compressedPositions":[645955626,2148499495,2147778599,2148106280,2147778600,2148171816,2148958248,2148237353,2148040745,2148433962,2148040746,2148450304]}},"default_args":[],"freeslots":[]}},{"$type":"Assign","position":0,"hasCont":false,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"test2","isInterned":false}},"rhs":{"$type":"Lambda","hasCont":false,"fptr":{"$type":"TrFuncPointer","posargcount":0,"allargcount":0,"hasvararg":false,"haskwarg":false,"kwindices":{},"code":{"$type":"Block","hasCont":false,"suite":[{"$type":"Assign","position":1,"hasCont":false,"lhs":{"$type":"StoreLocal","slot":0},"rhs":{"$type":"Constant","o":{"$type":"TrInt","value":0}}},{"$type":"While","position":2,"hasCont":false,"test":{"$type":"CmpOp","position":3,"op":15,"left":{"$type":"LocalVar","position":4,"slot":0},"comparators":[{"$type":"Constant","o":{"$type":"TrInt","value":10000000}}]},"body":{"$type":"Block","hasCont":false,"suite":[{"$type":"AugAssign","position":5,"op":0,"lhs":{"$type":"StoreLocal","slot":0},"rhs":{"$type":"Constant","o":{"$type":"TrInt","value":1}}}]},"orelse":null},{"$type":"Return","position":6,"hasCont":false,"value":{"$type":"LocalVar","position":7,"slot":0}}]},"metadata":{"$type":"Metadata","localnames":["x"],"freenames":[],"codename":"test2","filename":"a.py","sourceCode":"x = 1\nx, *z, y = [1, 2, 3]\n\ndef g(u):\n    return lambda x: x + u\n\ndef u(x):\n    i = 0\n    while i < x:\n        i = i + 1\n        yield i\nprint(g(1)(2))\n\ngen = u(5)\nprint(\"starting gen\")\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint.__call__(next(gen))\n\ndef k(*args, x=(1, 2)):\n    print(args)\n    return x\n\nprint(k(1, 2, 3, 5, 6))\n\ndef uq(a, b, *, y = 1):\n    return a + b + y\n\nprint(uq(1, 2))\nprint(uq(1, 2, y=3))\nprint(dict([(1, 2)]))\n\nz = 1\nz += 1\nprint(z)\ndef test1():\n    x = 0\n    while x < 10000000:\n        x += 1\n        yield x\ndef test2():\n    x = 0\n    while x < 10000000:\n        x += 1\n    return x\n# a = time()\n# xs = test2()\n# print(\"value\", xs)\n# print(\"time1\", time() - a)\n\n# a = time()\n# xs = list(test1())\n# print(\"len\", len(xs))\n# print(\"time2\", time() - a)\n# print(1)\ntry:\n    raise Exception(\"test\")\nexcept NativeError as e:\n    print(e.typename == \"DivideByZeroException\")\nprint(1)\nprint(1)\nprint(1)\n\n\ndef f():\n    print(\"s2\", (yield 5))\nprint(9)\nc = f()\n\ndef k():\n    yield from c\n\nx = ref()\nz = c.send(None, x)\nprint(\"z\", z)\nif z:\n    print(\"s1\", x.value)\n\nif k().send(None, x):\n    print(x.value)\n\n\nco = f()\nprint(co.send(None))\nco.send(3)","compressedSpanPointers":[2147581954,2147713028,2147844102,2147975174,2148040713,2147844106,2147581963,2147598336],"compressedPositions":[729841711,2148302892,2147778604,2148106285,2147778606,2148433965,2148171821,2148958253,2148237358,2148040751,2147778607,2148253696]}},"default_args":[],"freeslots":[]}},{"$type":"Try","position":71,"hasCont":false,"body":{"$type":"Block","hasCont":false,"suite":[{"$type":"Raise","position":72,"hasCont":false,"exc":{"$type":"CallEx","position":73,"hasCont":false,"func":{"$type":"GlobalVar","position":74,"name":{"$type":"TrStr","value":"Exception","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrStr","value":"test","isInterned":false}}}],"kwargs":[]}}]},"handlers":[{"$type":"Handler","exc_type":{"$type":"GlobalVar","position":75,"name":{"$type":"TrStr","value":"NativeError","isInterned":false}},"exc_bind":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"e","isInterned":false}},"body":{"$type":"Block","hasCont":false,"suite":[{"$type":"CallEx","position":76,"hasCont":false,"func":{"$type":"GlobalVar","position":77,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"CmpOp","position":78,"op":13,"left":{"$type":"Attribute","position":79,"hasCont":false,"value":{"$type":"GlobalVar","position":80,"name":{"$type":"TrStr","value":"e","isInterned":false}},"attr":{"$type":"TrStr","value":"typename","isInterned":false}},"comparators":[{"$type":"Constant","o":{"$type":"TrStr","value":"DivideByZeroException","isInterned":false}}]}}],"kwargs":[]}]}}],"orelse":null,"final":null},{"$type":"CallEx","position":81,"hasCont":false,"func":{"$type":"GlobalVar","position":82,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":1}}}],"kwargs":[]},{"$type":"CallEx","position":83,"hasCont":false,"func":{"$type":"GlobalVar","position":84,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":1}}}],"kwargs":[]},{"$type":"CallEx","position":85,"hasCont":false,"func":{"$type":"GlobalVar","position":86,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":1}}}],"kwargs":[]},{"$type":"Assign","position":0,"hasCont":false,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"f","isInterned":false}},"rhs":{"$type":"Lambda","hasCont":false,"fptr":{"$type":"TrFuncPointer","posargcount":0,"allargcount":0,"hasvararg":false,"haskwarg":false,"kwindices":{},"code":{"$type":"Block","hasCont":true,"suite":[{"$type":"CallEx","position":1,"hasCont":true,"func":{"$type":"GlobalVar","position":2,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrStr","value":"s2","isInterned":false}}},{"$type":"SequenceElement","unpack":false,"value":{"$type":"Yield","position":3,"value":{"$type":"Constant","o":{"$type":"TrInt","value":5}}}}],"kwargs":[]}]},"metadata":{"$type":"Metadata","localnames":[],"freenames":[],"codename":"f","filename":"a.py","sourceCode":"x = 1\nx, *z, y = [1, 2, 3]\n\ndef g(u):\n    return lambda x: x + u\n\ndef u(x):\n    i = 0\n    while i < x:\n        i = i + 1\n        yield i\nprint(g(1)(2))\n\ngen = u(5)\nprint(\"starting gen\")\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint.__call__(next(gen))\n\ndef k(*args, x=(1, 2)):\n    print(args)\n    return x\n\nprint(k(1, 2, 3, 5, 6))\n\ndef uq(a, b, *, y = 1):\n    return a + b + y\n\nprint(uq(1, 2))\nprint(uq(1, 2, y=3))\nprint(dict([(1, 2)]))\n\nz = 1\nz += 1\nprint(z)\ndef test1():\n    x = 0\n    while x < 10000000:\n        x += 1\n        yield x\ndef test2():\n    x = 0\n    while x < 10000000:\n        x += 1\n    return x\n# a = time()\n# xs = test2()\n# print(\"value\", xs)\n# print(\"time1\", time() - a)\n\n# a = time()\n# xs = list(test1())\n# print(\"len\", len(xs))\n# print(\"time2\", time() - a)\n# print(1)\ntry:\n    raise Exception(\"test\")\nexcept NativeError as e:\n    print(e.typename == \"DivideByZeroException\")\nprint(1)\nprint(1)\nprint(1)\n\n\ndef f():\n    print(\"s2\", (yield 5))\nprint(9)\nc = f()\n\ndef k():\n    yield from c\n\nx = ref()\nz = c.send(None, x)\nprint(\"z\", z)\nif z:\n    print(\"s1\", x.value)\n\nif k().send(None, x):\n    print(x.value)\n\n\nco = f()\nprint(co.send(None))\nco.send(3)","compressedSpanPointers":[2147581954,2147581954,2147713028,2147860480],"compressedPositions":[1132494916,2149220420,2147778628,2148106308,2148630596,2149105664]}},"default_args":[],"freeslots":[]}},{"$type":"CallEx","position":88,"hasCont":false,"func":{"$type":"GlobalVar","position":89,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":9}}}],"kwargs":[]},{"$type":"Assign","position":90,"hasCont":false,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"c","isInterned":false}},"rhs":{"$type":"CallEx","position":91,"hasCont":false,"func":{"$type":"GlobalVar","position":92,"name":{"$type":"TrStr","value":"f","isInterned":false}},"args":[],"kwargs":[]}},{"$type":"Assign","position":0,"hasCont":false,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"k","isInterned":false}},"rhs":{"$type":"Lambda","hasCont":false,"fptr":{"$type":"TrFuncPointer","posargcount":0,"allargcount":0,"hasvararg":false,"haskwarg":false,"kwindices":{},"code":{"$type":"Block","hasCont":true,"suite":[{"$type":"YieldFrom","position":1,"value":{"$type":"GlobalVar","position":2,"name":{"$type":"TrStr","value":"c","isInterned":false}}}]},"metadata":{"$type":"Metadata","localnames":[],"freenames":[],"codename":"k","filename":"a.py","sourceCode":"x = 1\nx, *z, y = [1, 2, 3]\n\ndef g(u):\n    return lambda x: x + u\n\ndef u(x):\n    i = 0\n    while i < x:\n        i = i + 1\n        yield i\nprint(g(1)(2))\n\ngen = u(5)\nprint(\"starting gen\")\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint.__call__(next(gen))\n\ndef k(*args, x=(1, 2)):\n    print(args)\n    return x\n\nprint(k(1, 2, 3, 5, 6))\n\ndef uq(a, b, *, y = 1):\n    return a + b + y\n\nprint(uq(1, 2))\nprint(uq(1, 2, y=3))\nprint(dict([(1, 2)]))\n\nz = 1\nz += 1\nprint(z)\ndef test1():\n    x = 0\n    while x < 10000000:\n        x += 1\n        yield x\ndef test2():\n    x = 0\n    while x < 10000000:\n        x += 1\n    return x\n# a = time()\n# xs = test2()\n# print(\"value\", xs)\n# print(\"time1\", time() - a)\n\n# a = time()\n# xs = list(test1())\n# print(\"len\", len(xs))\n# print(\"time2\", time() - a)\n# print(1)\ntry:\n    raise Exception(\"test\")\nexcept NativeError as e:\n    print(e.typename == \"DivideByZeroException\")\nprint(1)\nprint(1)\nprint(1)\n\n\ndef f():\n    print(\"s2\", (yield 5))\nprint(9)\nc = f()\n\ndef k():\n    yield from c\n\nx = ref()\nz = c.send(None, x)\nprint(\"z\", z)\nif z:\n    print(\"s1\", x.value)\n\nif k().send(None, x):\n    print(x.value)\n\n\nco = f()\nprint(co.send(None))\nco.send(3)","compressedSpanPointers":[2147581954,2147581955,2147598336],"compressedPositions":[1216381001,2148565065,2147778633,2148515840]}},"default_args":[],"freeslots":[]}},{"$type":"Assign","position":94,"hasCont":false,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"x","isInterned":false}},"rhs":{"$type":"CallEx","position":95,"hasCont":false,"func":{"$type":"GlobalVar","position":96,"name":{"$type":"TrStr","value":"ref","isInterned":false}},"args":[],"kwargs":[]}},{"$type":"Assign","position":97,"hasCont":false,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"z","isInterned":false}},"rhs":{"$type":"CallEx","position":98,"hasCont":false,"func":{"$type":"Attribute","position":99,"hasCont":false,"value":{"$type":"GlobalVar","position":100,"name":{"$type":"TrStr","value":"c","isInterned":false}},"attr":{"$type":"TrStr","value":"send","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrNone"}}},{"$type":"SequenceElement","unpack":false,"value":{"$type":"GlobalVar","position":101,"name":{"$type":"TrStr","value":"x","isInterned":false}}}],"kwargs":[]}},{"$type":"CallEx","position":102,"hasCont":false,"func":{"$type":"GlobalVar","position":103,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrStr","value":"z","isInterned":false}}},{"$type":"SequenceElement","unpack":false,"value":{"$type":"GlobalVar","position":104,"name":{"$type":"TrStr","value":"z","isInterned":false}}}],"kwargs":[]},{"$type":"IfThenElse","position":105,"hasCont":false,"clauses":[{"$type":"IfClause","cond":{"$type":"GlobalVar","position":106,"name":{"$type":"TrStr","value":"z","isInterned":false}},"body":{"$type":"Block","hasCont":false,"suite":[{"$type":"CallEx","position":107,"hasCont":false,"func":{"$type":"GlobalVar","position":108,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrStr","value":"s1","isInterned":false}}},{"$type":"SequenceElement","unpack":false,"value":{"$type":"Attribute","position":109,"hasCont":false,"value":{"$type":"GlobalVar","position":110,"name":{"$type":"TrStr","value":"x","isInterned":false}},"attr":{"$type":"TrStr","value":"value","isInterned":false}}}],"kwargs":[]}]}}],"orelse":null},{"$type":"IfThenElse","position":111,"hasCont":false,"clauses":[{"$type":"IfClause","cond":{"$type":"CallEx","position":112,"hasCont":false,"func":{"$type":"Attribute","position":113,"hasCont":false,"value":{"$type":"CallEx","position":114,"hasCont":false,"func":{"$type":"GlobalVar","position":115,"name":{"$type":"TrStr","value":"k","isInterned":false}},"args":[],"kwargs":[]},"attr":{"$type":"TrStr","value":"send","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrNone"}}},{"$type":"SequenceElement","unpack":false,"value":{"$type":"GlobalVar","position":116,"name":{"$type":"TrStr","value":"x","isInterned":false}}}],"kwargs":[]},"body":{"$type":"Block","hasCont":false,"suite":[{"$type":"CallEx","position":117,"hasCont":false,"func":{"$type":"GlobalVar","position":118,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Attribute","position":119,"hasCont":false,"value":{"$type":"GlobalVar","position":120,"name":{"$type":"TrStr","value":"x","isInterned":false}},"attr":{"$type":"TrStr","value":"value","isInterned":false}}}],"kwargs":[]}]}}],"orelse":null},{"$type":"Assign","position":121,"hasCont":false,"lhs":{"$type":"StoreGlobal","name":{"$type":"TrStr","value":"co","isInterned":false}},"rhs":{"$type":"CallEx","position":122,"hasCont":false,"func":{"$type":"GlobalVar","position":123,"name":{"$type":"TrStr","value":"f","isInterned":false}},"args":[],"kwargs":[]}},{"$type":"CallEx","position":124,"hasCont":false,"func":{"$type":"GlobalVar","position":125,"name":{"$type":"TrStr","value":"print","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"CallEx","position":126,"hasCont":false,"func":{"$type":"Attribute","position":127,"hasCont":false,"value":{"$type":"GlobalVar","position":128,"name":{"$type":"TrStr","value":"co","isInterned":false}},"attr":{"$type":"TrStr","value":"send","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrNone"}}}],"kwargs":[]}}],"kwargs":[]},{"$type":"CallEx","position":129,"hasCont":false,"func":{"$type":"Attribute","position":130,"hasCont":false,"value":{"$type":"GlobalVar","position":131,"name":{"$type":"TrStr","value":"co","isInterned":false}},"attr":{"$type":"TrStr","value":"send","isInterned":false}},"args":[{"$type":"SequenceElement","unpack":false,"value":{"$type":"Constant","o":{"$type":"TrInt","value":3}}}],"kwargs":[]}]},"metadata":{"$type":"Metadata","localnames":[],"freenames":[],"codename":"<module>","filename":"a.py","sourceCode":"x = 1\nx, *z, y = [1, 2, 3]\n\ndef g(u):\n    return lambda x: x + u\n\ndef u(x):\n    i = 0\n    while i < x:\n        i = i + 1\n        yield i\nprint(g(1)(2))\n\ngen = u(5)\nprint(\"starting gen\")\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint.__call__(next(gen))\n\ndef k(*args, x=(1, 2)):\n    print(args)\n    return x\n\nprint(k(1, 2, 3, 5, 6))\n\ndef uq(a, b, *, y = 1):\n    return a + b + y\n\nprint(uq(1, 2))\nprint(uq(1, 2, y=3))\nprint(dict([(1, 2)]))\n\nz = 1\nz += 1\nprint(z)\ndef test1():\n    x = 0\n    while x < 10000000:\n        x += 1\n        yield x\ndef test2():\n    x = 0\n    while x < 10000000:\n        x += 1\n    return x\n# a = time()\n# xs = test2()\n# print(\"value\", xs)\n# print(\"time1\", time() - a)\n\n# a = time()\n# xs = list(test1())\n# print(\"len\", len(xs))\n# print(\"time2\", time() - a)\n# print(1)\ntry:\n    raise Exception(\"test\")\nexcept NativeError as e:\n    print(e.typename == \"DivideByZeroException\")\nprint(1)\nprint(1)\nprint(1)\n\n\ndef f():\n    print(\"s2\", (yield 5))\nprint(9)\nc = f()\n\ndef k():\n    yield from c\n\nx = ref()\nz = c.send(None, x)\nprint(\"z\", z)\nif z:\n    print(\"s1\", x.value)\n\nif k().send(None, x):\n    print(x.value)\n\n\nco = f()\nprint(co.send(None))\nco.send(3)","compressedSpanPointers":[2155905025,2147647491,2147778563,2147647493,2147909639,2148040713,2148171787,2148171788,2148368398,2148368399,2148368400,2148630546,2148761618,2148761620,2148892694,2148892695,2149089305,2149089306,2149285916,2149285917,2149482527,2149613601,2149613602,2149810212,2149810213,2150006823,2150137897,2150137898,2150334508,2150334509,2150531119,2150662193,2150662194,2150858804,2150858805,2151055415,2151186489,2151186490,2151186491,2151448637,2151448638,2151645248,2151776322,2151907396,2152038470,2152038471,2152235081,2152235082,2152431692,2152562766,2152562767,2152759377,2152759378,2152955988,2152955989,2153152599,2153152600,2153349210,2153349211,2153545821,2153545822,2153742432,2153873506,2154004580,2154135654,2154266728,2154266729,2154463339,2154594413,2154725487,2154856561,2154987635,2155118707,2155118709,2155249783,2155380849,2155380857,2155511931,2155511932,2155511933,2155774079,2155773953,8388865,2147549824,16875521,58720516,2147550592,17072129,109052167,2147551360,17399809,176161033,2147552128,17596417,226492686,2147552640,17727489,260047120,2147553664,17989633,327155988,2147554176,18120705,360710422,2147555200,18382849,394264856,2147555712,18382849,444596507,2147556480,18710529,511705373,2147557248,18907137,562037026,2147558272,19169281,629145894,2147558272,19300353,662700328,2147559808,19431425,713031979,2147560576,19759105,780140845,2147561344,19759105,813695277,2147561856,20086785,864026932,2147560576,20217857,897581366,2147563392,20348929,947913017,2147564160,20676609,981467451,2147564672,20807681,1048576317,2147565440,21004289,1098907968,2147566208,21004289,1132462404,2147566976,21266433,1182794052,2147567552],"compressedPositions":[25198593,2147844098,2155872896,343933568,192938624,142607488,2147844122,2147975296,192941952,209747980,2148433932,2147844108,2147909644,2148368396,2148171788,2147975182,2155875968,176164480,109055616,125833088,2148499477,2148499461,2148565120,276828288,276825472,276825728,276828032,276826752,276827008,276827776,293634065,2148565009,2147844113,2147909649,2148499473,2148171793,2148237329,2148433938,2155876992,276828800,92279424,109056640,260051584,176165504,192942720,243274624,2148761616,2148761605,2148761606,2148761615,2148761610,2148761611,2148761614,2148827264,343939456,343936640,343934336,343936896,343939200,343937920,343938176,343938944,377520152,2148302870,2148499478,2148892698,2155879040,394271360,92281472,109058688,377494144,125836416,2149416980,2149548160,528486272,528483712,528483968,528486016,528484480,545292320,2148827168,2147844128,2147909664,2148761632,2148040737,2155880832,360718720,92283264,109060480,343941504,176169344,192946560,327164288,209723776,310387584,2149810181,2149875840,612370048,629178405,2148040741,2147844133,2147909669,2147975206,2155883136,260057984,2150596620,2151317632,1031811200,998245504,998251392,998247040,998249344,1015023488,1015026304,1031799936,1031801216,1031801472,1031810944,1031804032,1031801728,1048608830,2148040766,2147844159,2155888512,142622592,92291200,2151710728,2151710725,2151907456,1149246080,1166049349,2148040773,2147844166,2155890304,125847168,75515520,92293248,2152300560,2152431744,1266682240,1266680960,1266681728,1283489868,2148761676,2147778636,2148171852,2147844172,2148630604,2148696141,2155892096,226512256,92294528,192957824,209735296,2152693784,2152628227,2152628228,2152693764,2152693769,2152693776,2152693783,2152693777,2152824960,1384125056,1367344000,1367348352,1367346048,1367344768,1367344256,1367347840,1367348096,1384121472,1384122752,1384123008,1384124800,1384123264,1434484821,2148040789,2147844181,2147909718,2155894400,343955072,92296832,109074048,327177856,226514560,142628736,2153218058,2153218055,2153218050,3221225472]}}